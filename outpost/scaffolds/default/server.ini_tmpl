[app:main]

#################################################################################
# Basic setup
#
# the directory to be served. Either a python module asset path, relative path
# or absolute path
files.directory = {{root}}

# The url prefix used to route requests to the local file directory. By default
# all urls not matching the proxy route will be handled by the file server.
files.route = {{files}}

# The host/domain to proxy requests to. This should be a fully qualified host
# or domain name including optional port e.g. mydomain.nive.io.
proxy.host = {{host}}
proxy.protocol = http
proxy.timeout = 60
proxy.session = True
proxy.retry = 3
proxy.rewrite =

# The url prefix used to route requests through the proxy. Use any path spec e.g '/webapi'
# to activate proxying for mathing urls. Urls are mapped 1:1 to the proxy host.
proxy.route = {{proxy}}

# Specifies the fallback for not explicitly matching routes. Either `files` or `proxy`.
server.fallback = files
server.default_path = index.html
server.content_type = text/html; charset=UTF-8


#################################################################################
# Filter and templating
#
# A list of filters for reponse processing e.g.
#
#  filter = [
#    {"callable": "outpost.filterinc.redirect",
#     "hook": "pre",
#     "path": "^/(mysite|mysite/db/)$",
#     "settings": {"url": ""},
#     "name": "redirect"
#    },
#    {"callable": "outpost.filterinc.replacestr",
#     "apply_to": "proxy",
#     "content_type": "text/html",
#     "settings": {"str": "My Title", "new": "HUAH"},
#     "name": "strfilter"
#    },
#    {"callable": "my_package.views.listing",
#     "hook": "post",
#     "apply_to": "proxy",
#     "content_type": "text/html",
#     "path": "mysite(/index.html|/index_html)",
#     "sub_filter": "maintmpl",
#     "settings": {}
#    },
#    {"callable": "outpost.filterinc.template",
#     "name": "maintmpl",
#     "hook": "post",
#     "is_sub_filter": true,
#     "settings": {"template": "my_package:templates/maintmpl.pt",
#                  "values": {"local": "/mysite/mobile/",
#                             "path": "/mysite/db/"}
#                 }
#    }
#  ]
#
# Have alook at the docs for all options or how to include your own filter.


#################################################################################
# Debugging options
#
# enable or disable debugging and tracing
debug = False

# Activate interactive commandline request tracing in python debugger.
# Allows you to modify and pause requests before being returned to the browser.
# Takes a regular expression as parameter, the server breaks only if the re matches.
# e.g. \.html for html files.
files.trace =

# Activate interactive commandline request tracing in python debugger.
# Allows you to modify and pause calls to the webservice. Takes a regular
# expression as parameter, the server breaks only if the re matches.
# e.g. datastore/api/setItem.
proxy.trace =


#################################################################################
# Server setup

pyramid.includes = pyramid_debugtoolbar
pyramid.default_locale_name = en
pyramid.reload_templates = true


debugtoolbar.enabled = false
debugtoolbar.panels =
    pyramid_debugtoolbar.panels.headers.HeaderDebugPanel
    pyramid_debugtoolbar.panels.request_vars.RequestVarsDebugPanel
    pyramid_debugtoolbar.panels.performance.PerformanceDebugPanel
    pyramid_debugtoolbar.panels.logger.LoggingPanel
    pyramid_debugtoolbar.panels.settings.SettingsDebugPanel

use = call:outpost.server:main



[server:main]
use = egg:waitress#main
host = 127.0.0.1
port = 5556
threads = 5


# Begin logging configuration
[loggers]
keys = root, staticserver

[handlers]
keys = console

[formatters]
keys = generic

[logger_root]
level = INFO
handlers = console

[logger_staticserver]
level = DEBUG
handlers =
qualname = staticserver

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

[formatter_generic]
format = %(asctime)s %(levelname)-5.5s [%(name)s][%(threadName)s] %(message)s
# End logging configuration
